// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package BibliotecaClassDiagram.BibliotecaClassDiagram;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/************************************************************/
/**
 * 
 */
public class Imprumut {

	private String dataImprumut;
	private String dataReturnare;
	private String dataLimitaCarte;
	private Bibliotecar bibliotecar;
	private Cititor cititor;
	private List<Carte> carti = new ArrayList<>();
	
	public Imprumut(String dataImprumut, String dataReturnare, String dataLimitaCarte, Bibliotecar bibliotecar, Cititor cititor, List<Carte> carti) {
		this.dataImprumut = dataImprumut;
		this.dataReturnare = dataReturnare;
		this.dataLimitaCarte = dataLimitaCarte;
		this.bibliotecar = bibliotecar;
		this.cititor = cititor;
		this.carti = carti;
	}

	public String getDataImprumut() {
		return dataImprumut;
	}

	public void setDataImprumut(String dataImprumut) {
		this.dataImprumut = dataImprumut;
	}

	public String getDataReturnare() {
		return dataReturnare;
	}

	public void setDataReturnare(String dataReturnare) {
		this.dataReturnare = dataReturnare;
	}

	public String getDataLimitaCarte() {
		return dataLimitaCarte;
	}

	public void setDataLimitaCarte(String dataLimitaCarte) {
		this.dataLimitaCarte = dataLimitaCarte;
	}

	public Bibliotecar getBibliotecar() {
		return bibliotecar;
	}

	public void setBibliotecar(Bibliotecar bibliotecar) {
		this.bibliotecar = bibliotecar;
	}

	public List<Carte> getCarti() {
		return carti;
	}

	public void setCarti(List<Carte> carti) {
		this.carti = carti;
	}

	public void afisare() {
		System.out.println("=====  Informatii despre imprumut =====");
		System.out.println("Data imprumutului: " + this.dataImprumut);
		System.out.println("Data returnare: " + this.dataReturnare);
		System.out.println("Data limita carte: " + this.dataLimitaCarte);
		System.out.println("Carti: ");
		for (int i = 0; i < carti.size(); i++) {
			carti.get(i).afisare();
		}
		
	}

	public void depasireTermen(Cititor cititor) throws ParseException {

		Date returnare = new SimpleDateFormat("dd/MM/yyyy").parse(this.dataReturnare);
		Date limita = new SimpleDateFormat("dd/MM/yyyy").parse(this.dataLimitaCarte);

		if (returnare.compareTo(limita) > 0) {
			this.bibliotecar.aplicaPenalizare(cititor);
		}
	}
};
