// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package BibliotecaClassDiagram.BibliotecaClassDiagram;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;


/************************************************************/
/**
 * 
 */
public class Biblioteca {

    private static int numarCarti = 0; //Numarul de carti existente in biblioteca
    private static int numarCartiDisponibile = 0; //Numarul de carti disponibile (care pot fi imprumutate)
    private static int numarCartiImprumutate = 0; //Numarul de carti care au fost imprumutate
    private static int numarCartiPierdute = 0; //Numarul de carti pierdute
    private List<Carte> listaCarti = new ArrayList<>(); //Lista cu toate cartile din biblioteca
    private List<Imprumut> listaImprumut = new ArrayList<>(); //Lista cu istoricul tuturor imprumuturilor
    private List<Cititor> listaCititori = new ArrayList<>(); //Lista cu cititorii inregistrati
    private List<Carte> listaCartiImprumutate = new ArrayList<>();
    private Bibliotecar bibliotecar;

    public Biblioteca(List<Carte> listaCarti, List<Imprumut> listaImprumut, List<Cititor> listaCititori, List<Carte> listaCartiImprumutate, Bibliotecar bibliotecar) {
        this.listaCarti = listaCarti;
        this.listaImprumut = listaImprumut;
        this.listaCititori = listaCititori;
        this.listaCartiImprumutate = listaCartiImprumutate;
        this.bibliotecar = bibliotecar;
    }

    public Biblioteca(List<Carte> listaCarti, Bibliotecar bibliotecar) {
        this.listaCarti = listaCarti;
        this.bibliotecar = bibliotecar;
    }
    
    public List<Carte> getListaCartiImprumutate() {
    	return this.listaCartiImprumutate;
    }

    int getNumarCarti() {
        return this.numarCarti;
    }

    int getNumarCartiDisponibile() {
        return this.numarCartiDisponibile;
    }

    int getNumarCartiImprumutate() {
        return this.numarCartiImprumutate;
    }

    int getNumarCartiPierdute() {
        return this.numarCartiPierdute;
    }

    List<Carte> getCarti() {
        return this.listaCarti;
    }

    List<Imprumut> getDetaliiImprumut() {
        return this.listaImprumut;
    }

    List<Cititor> getCititori() {
        return this.listaCititori;
    }

    public static void setNumarCarti(int numarCarti) {
        Biblioteca.numarCarti = numarCarti;
    }

    public static void setNumarCartiDisponibile(int numarCartiDisponibile) {
        Biblioteca.numarCartiDisponibile = numarCartiDisponibile;
    }

    public static void setNumarCartiImprumutate(int numarCartiImprumutate) {
        Biblioteca.numarCartiImprumutate = numarCartiImprumutate;
    }

    public static void setNumarCartiPierdute(int numarCartiPierdute) {
        Biblioteca.numarCartiPierdute = numarCartiPierdute;
    }

    public void setListaCarti(List<Carte> listaCarti) {
        this.listaCarti = listaCarti;
    }

    public void setListaImprumut(List<Imprumut> listaImprumut) {
        this.listaImprumut = listaImprumut;
    }

    public void setListaCititori(List<Cititor> listaCititori) {
        this.listaCititori = listaCititori;
    }

    public void setListaCartiImprumutate(List<Carte> listaCartiImprumutate) {
        this.listaCartiImprumutate = listaCartiImprumutate;
    }

    public void setBibliotecar(Bibliotecar bibliotecar) {
        this.bibliotecar = bibliotecar;
    }

    public void afisare() {
        System.out.println("=====  Informatii despre biblioteca =====");
        System.out.println("Numar carti: " + this.numarCarti);
        System.out.println("Numar carti disponibile: " + this.numarCartiDisponibile);
        System.out.println("Numar carti imprumutate: " + this.numarCartiImprumutate);
        System.out.println("Numar carti pierdute: " + this.numarCartiPierdute);
        System.out.println("=======================================");
        System.out.println("Carti: ");
        for (int i = 0; i < listaCarti.size(); i++) {
            listaCarti.get(i).afisare();
        }
        System.out.println("=======================================");
        System.out.println("Detalii imprumut: ");
        for (int i = 0; i < listaImprumut.size(); i++) {
            listaImprumut.get(i).afisare();
        }
        System.out.println("=======================================");
        System.out.println("Cititori: ");
        for (int i = 0; i < listaCititori.size(); i++) {
            listaCititori.get(i).afisare();
        }
        System.out.println("=======================================");
        System.out.println("Bibliotecar: ");
        bibliotecar.afisare();
    }

    public void adaugaCarte(Carte carte) {
        listaCarti.add(carte);
        numarCarti++;
        numarCartiDisponibile++;
    }

    public void stergeCarte(Carte carte) {
        listaCarti.remove(carte);
        numarCarti--;
        numarCartiDisponibile--;
    }

    public void adaugaCititor(Cititor cititor) {
        listaCititori.add(cititor);
    }

    public void stergeCititor(Cititor cititor) {
        listaCititori.remove(cititor);
    }

    public void adaugaImprumut(Imprumut fisa, Cititor cititor) {
        cititor.getImprumuturi().add(fisa);
        numarCartiDisponibile -= fisa.getCarti().size();
        numarCartiImprumutate += fisa.getCarti().size();
        listaImprumut.add(fisa);
        for (Carte c : fisa.getCarti()) {
            listaCartiImprumutate.add(c);
        }
    }

    public boolean incheieImprumut(Imprumut fisa, Cititor cititor, String dataReturnare) throws ParseException {
    	if (listaImprumut.contains(fisa) && listaCititori.contains(cititor)) {
    		fisa.setDataReturnare(dataReturnare);
    	    fisa.depasireTermen(cititor);
    	    listaImprumut.remove(fisa);
    	    numarCartiDisponibile += fisa.getCarti().size();
    	    numarCartiImprumutate -= fisa.getCarti().size();
    	    return true;
    	}
    	return false;
    
    }

    public void cartePierduta(Carte c, Cititor cititor) {
        listaCarti.remove(c);
        numarCarti--;
        numarCartiDisponibile--;
        numarCartiPierdute++;
        bibliotecar.aplicaPenalizare(cititor);

    }
};
